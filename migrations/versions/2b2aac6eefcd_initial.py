"""initial

Revision ID: 2b2aac6eefcd
Revises: 
Create Date: 2025-09-11 22:49:24.147987

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '2b2aac6eefcd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('expire_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=2, scale=2), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('ride_type', sa.Enum('ALL', 'TAXI', 'TRUCK', 'BOX', name='discounttype'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('(percentage IS NOT NULL AND amount IS NULL) OR (percentage IS NULL AND amount IS NOT NULL)', name='valid_discount'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('na_code', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('ce_code', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ce_code'),
    sa.UniqueConstraint('na_code')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('complaints',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reasons', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dwallet',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('bank_account', sa.String(length=16), nullable=False),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bank_account')
    )
    op.create_table('rides',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('canceller_id', sa.Integer(), nullable=True),
    sa.Column('start_address', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('end_address', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('alternative_end_address', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('stop_time', sa.Time(), nullable=True),
    sa.Column('ride_type', sa.Enum('TAXI', 'BOX', 'TRUCK', name='ridetype'), nullable=False),
    sa.Column('status', sa.Enum('REQUESTED', 'ACCEPTED', 'COMPLETED', 'CANCELLED', 'IN_PROGRESS', name='ridestatus'), nullable=False),
    sa.Column('requested_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fare', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_rides_alternative_end_address', 'rides', ['alternative_end_address'], unique=False, postgresql_using='gist')
    # op.create_index('idx_rides_end_address', 'rides', ['end_address'], unique=False, postgresql_using='gist')
    # op.create_index('idx_rides_start_address', 'rides', ['start_address'], unique=False, postgresql_using='gist')
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('license_plate', sa.String(length=20), nullable=False),
    sa.Column('vehicle_type', sa.Enum('CAR', 'TRUCK', 'MOTORCYCLE', name='vehicletype'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['drivers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_plate')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ride_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.Enum('CREDIT_CARD', 'CASH', 'SNAP_WALLET', name='paymentmethod'), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['ride_id'], ['rides.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ride_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='valid_rating'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['ride_id'], ['rides.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('payments')
    op.drop_table('vehicles')
    op.drop_index('idx_rides_start_address', table_name='rides', postgresql_using='gist')
    op.drop_index('idx_rides_end_address', table_name='rides', postgresql_using='gist')
    op.drop_index('idx_rides_alternative_end_address', table_name='rides', postgresql_using='gist')
    op.drop_table('rides')
    op.drop_table('dwallet')
    op.drop_table('complaints')
    op.drop_table('users')
    op.drop_table('drivers')
    op.drop_table('discounts')
    # ### end Alembic commands ###
